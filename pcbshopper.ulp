/**
 * @file pcbshopper.ulp
 * @brief Automatically parse PCB and submit for quote on PCBshopper.com
 *
 * @author Jeremy Ruhland <jeremy ( a t ) goopypanther.org>
 * @license (C) Jeremy Ruhland 2016 under GPL3
 *
 */
 
#usage "<b>PCBshopper Quote Helper</b>"
       "<p>"
       "Automatically submit quotes to PCBshopper.com"
       "<p>"
       "<author>Author: Jeremy Ruhland</author>"
       
#require 5.1000
string Version = "1";


// Typedefs
enum {
    false = 0,
    true  = 1
};


// Global variables
char skipDrcExport;
string druFilePath;
string paramWarnings;


// Functions

/**
 * Calculate PCB parameters required for quote
 * TODO
 */
void calculateParams(void) {

}


/**
 * Draw dialog with quote information
 * TODO
 */
void drawDialog(void) {

}


/**
 * Main function executed from here
 */

// Parse arguments & search for state indicator
skipDrcExport = false;
for (int i = 1; i <= argc; i++) {
    if (argv[i] == "-skipdrcexport") {
        skipDrcExport = true;
    } else {}
}

// Check we are in layout editor...
if (board) {
    // Export board design rules to temp file unless specified by runtime flag
    if (skipDrcExport == false) {
        board(B) { // Create context
            // Generate file path for new temp dru file
            druFilePath = filedir(argv[0]) + "pcbshpr-" + filename(filesetext(B.name, ".dru"));

            // Save drc file, re-run script with new directive
            exit("DRC SAVE '" + druFilePath + "';\nRUN '" + argv[0] + "' -skipdrcexport;");
        }
    } else {
    // If dru already exported in previous run
        status("Identifying PCB design constraints...");
        calculateParams(); // Check PCB for all relevant design constraints
        
        // Check if any warnings were generated during param calcs
        if (paramWarnings) {
            // Generate warning string for display
            paramWarnings = "<b>Warnings generated during param calcs:</b> <ul>" + paramWarnings + "</ul>";
        } else {}

        drawDialog(); // Display info dialog with params

        exit(EXIT_SUCCESS);
	}
// If we are not in layout editor...
} else {
    // Popup warning
    dlgMessageBox("This script must be run from layout editor.");
}
